---
name: create ccs_build container

on:
  release:
    types: [published]
    
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-base:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.5.3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.0

      - name: Get Build Cache Base
        uses: actions/cache@v2.0.0
        with:
          path: /tmp/.buildx-base-cache
          key: buildx-base-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            buildx-base-

      - name: Build Base Image
        id: docker_build_base
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: false
          cache-from: type=local,src=/tmp/.buildx-base-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-base-cache
          target: install-ccs

  docker:
    runs-on: ubuntu-latest
    needs: build-base
    permissions:
      packages: write
    strategy:
      # max-parallel: 1
      fail-fast: false
      matrix:
        cgt-versions:
          - prefix: 18.1.3
            version-number: 18.1.3.LTS
            installer-url: 18.1.3.LTS/ti_cgt_msp430_18.1.3.LTS_linux_installer_x86.bin
          - prefix: 21.6.0
            version-number: 21.6.0.LTS
            installer-url: 21.6.0.LTS/ti_cgt_msp430_21.6.0.LTS_linux-x64_installer.bin
    steps:
      - name: Get Release Tag
        # run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> "$GITHUB_ENV"
        run: echo "RELEASE_VERSION=v0.0.0" >> "$GITHUB_ENV"

      - name: Checkout Code
        uses: actions/checkout@v3.5.3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.9.0

      - name: Get Build Cache Base
        uses: actions/cache@v2.0.0
        with:
          path: /tmp/.buildx-base-cache
          key: buildx-base-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            buildx-base-

      - name: Get Build Cache CGT
        uses: actions/cache@v2.0.0
        with:
          path: /tmp/.buildx-cgt-cache-${{ matrix.cgt-versions.prefix }}
          key: buildx-base-${{ hashFiles('Dockerfile') }}-${{ matrix.cgt-versions.prefix }}
          restore-keys: |
            buildx-cgt-${{ matrix.cgt-versions.prefix }}-

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Build and Push Images For Specific CGT Versions
        id: docker_build_cgt_images
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          push: true
          tags: >
            ghcr.io/${{
            github.repository_owner 
            }}/ccs-build:${{ matrix.cgt-versions.prefix }}-${{ env.RELEASE_VERSION }}
          cache-from: |
            type=local,src=/tmp/.buildx-base-cache,scope=build-${{ matrix.cgt-versions.prefix }}
            type=local,src=/tmp/.build-cgt-${{ matrix.cgt-versions.prefix }}-cache,scope=build-${{ matrix.cgt-versions.prefix }}
          cache-to: |
            type=local,src=/tmp/.build-cgt-${{ matrix.cgt-versions.prefix }}-cache,mode=max,scope=build-${{ matrix.cgt-versions.prefix }}
          target: install-specific-cgt
          build-args: |
            MSP430_CGT_VERSION=${{ matrix.cgt-versions.version-number }}
            MSP430_CGT_INSTALLER_URL=${{ matrix.cgt-versions.installer-url }}
